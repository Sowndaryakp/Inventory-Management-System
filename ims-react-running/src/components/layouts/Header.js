import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { NavLink, useLocation } from "react-router-dom";
import { cn } from "@/lib/utils";
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet";
import { appConfig } from "@/config/app";
import { Button } from "@/components/ui/button";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { mainMenu } from "@/config/menu";
import { ChevronDownIcon, ViewVerticalIcon } from "@radix-ui/react-icons";
import { ScrollArea } from "@radix-ui/react-scroll-area";
import { Logo } from "../logo";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
export function Header() {
    const [open, setOpen] = useState(false);
    const location = useLocation();
    return (_jsx("header", { className: "flex-wrap supports-backdrop-blur:bg-background/60 sticky top-0 z-50 w-full border-b bg-background/90 backdrop-blur ", children: _jsxs("div", { className: "container px-4 md:px-8 flex h-20 items-center", children: [_jsxs("div", { className: "mr-4 hidden md:flex", children: [_jsx(NavLink, { to: "/", className: "mr-6 flex items-center space-x-2", children: _jsx(Logo, {}) }), _jsx("nav", { className: "flex items-center space-x-6 text-sm font-medium", children: mainMenu.map((menu, index) => menu.items !== undefined ? (_jsxs(DropdownMenu, { children: [_jsxs(DropdownMenuTrigger, { className: cn("flex items-center py-1 focus:outline-none text-sm font-medium transition-colors hover:text-primary", (menu.items.filter(subitem => subitem.to !== undefined).map(subitem => subitem.to))
                                            .includes(location.pathname) ? 'text-foreground' : 'text-foreground/60'), children: [menu.title, _jsx(ChevronDownIcon, { className: "ml-1 -mr-1 h-3 w-3 text-muted-foreground" })] }), _jsx(DropdownMenuContent, { className: 'w-48', align: "start", forceMount: true, children: menu.items.map((subitem, subindex) => subitem.to !== undefined ? (_jsx(NavLink, { to: subitem.to, children: _jsx(DropdownMenuItem, { className: cn("hover:cursor-pointer", { 'bg-muted': subitem.to === location.pathname }), children: subitem.title }) }, subindex)) : (subitem.label ? (_jsx(DropdownMenuLabel, { children: subitem.title }, subindex)) : (_jsx(DropdownMenuSeparator, {}, subindex)))) })] }, index)) : (_jsx(NavLink, { to: menu.to ?? "", className: ({ isActive }) => cn("text-sm font-medium transition-colors hover:text-primary", isActive ? "text-foreground" : "text-foreground/60"), children: menu.title }, index))) })] }), _jsxs(Sheet, { open: open, onOpenChange: setOpen, children: [_jsx(SheetTrigger, { asChild: true, children: _jsxs(Button, { variant: "ghost", className: "mr-4 px-0 text-base hover:bg-transparent focus-visible:bg-transparent focus-visible:ring-0 focus-visible:ring-offset-0 md:hidden", children: [_jsx(ViewVerticalIcon, { className: "h-5 w-5" }), _jsx("span", { className: "sr-only", children: "Toggle Menu" })] }) }), _jsxs(SheetContent, { side: "left", className: "pr-0 sm:max-w-xs", children: [_jsx(NavLink, { to: "/", onClick: () => setOpen(false), className: "flex items-center space-x-2", children: _jsx(Logo, {}) }), _jsx(ScrollArea, { className: "my-4 h-[calc(100vh-8rem)] pb-8 pl-8", children: _jsx(Accordion, { type: "single", collapsible: true, className: "w-full", defaultValue: "item-" + mainMenu.findIndex(item => item.items !== undefined ? item.items.filter(subitem => subitem.to !== undefined).map(subitem => subitem.to).includes(location.pathname) : false), children: _jsx("div", { className: "flex flex-col space-y-3", children: mainMenu.map((menu, index) => menu.items !== undefined ? (_jsxs(AccordionItem, { value: `item-${index}`, className: "border-b-0 pr-6", children: [_jsx(AccordionTrigger, { className: cn("py-1 hover:no-underline hover:text-primary [&[data-state=open]]:text-primary", (menu.items.filter(subitem => subitem.to !== undefined).map(subitem => subitem.to))
                                                            .includes(location.pathname) ? 'text-foreground' : 'text-foreground/60'), children: _jsx("div", { className: "flex", children: menu.title }) }), _jsx(AccordionContent, { className: "pb-1 pl-4", children: _jsx("div", { className: "mt-1", children: menu.items.map((submenu, subindex) => (submenu.to !== undefined ? (_jsx(NavLink, { to: submenu.to, onClick: () => setOpen(false), className: ({ isActive }) => cn("block justify-start py-1 h-auto font-normal hover:text-primary", isActive ? 'text-foreground' : 'text-foreground/60'), children: submenu.title }, subindex)) : (submenu.label !== '' ? (null) : (_jsx("div", { className: "px-3" }))))) }) })] }, index)) : (_jsx(NavLink, { to: menu.to ?? "", onClick: () => setOpen(false), className: ({ isActive }) => cn("py-1 text-sm font-medium transition-colors hover:text-primary", isActive ? "text-foreground" : "text-foreground/60"), children: menu.title }, index))) }) }) })] })] }), _jsxs("a", { href: "/", className: "mr-6 flex items-center space-x-2 md:hidden", children: [_jsx("img", { src: "../src/assets/images/cmti.png", className: "h-14 w-24" }), _jsx("span", { className: "font-bold inline-block", children: appConfig.name })] }), _jsxs("div", { className: "flex flex-1 items-center justify-between space-x-2 md:justify-end", children: [_jsx("div", { className: "w-full flex-1 md:w-auto md:flex-none" }), _jsx("nav", { className: "flex items-center space-x-2", children: _jsxs(DropdownMenu, { children: [_jsx(DropdownMenuTrigger, { asChild: true, children: _jsx(Button, { variant: 'ghost', className: 'relative h-8 w-8 rounded-full', children: _jsx(Avatar, { className: 'h-8 w-8', children: _jsx(AvatarFallback, { children: "CMTI" }) }) }) }), _jsxs(DropdownMenuContent, { className: 'w-56', align: 'end', forceMount: true, children: [_jsx(DropdownMenuLabel, { className: 'font-normal', children: _jsxs("div", { className: 'flex flex-col space-y-1', children: [_jsx("p", { className: 'text-sm font-medium leading-none', children: "CMTI" }), _jsx("p", { className: 'text-xs leading-none text-muted-foreground', children: "cmti@example.com" })] }) }), _jsx(DropdownMenuSeparator, {}), _jsx(DropdownMenuItem, { children: "Log out" })] })] }) })] })] }) }));
}
